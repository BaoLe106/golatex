# Stage 1: Build TeX Live minimal distribution
FROM registry.gitlab.com/islandoftex/images/texlive:latest AS texlive-builder

# Install only the necessary TeX packages
RUN tlmgr install \
    collection-basic \
    collection-latex \
    collection-latexrecommended \
    collection-fontsrecommended \
    latexmk \
    && tlmgr path add

RUN pdflatex --version

# Stage 2: Build Go application
FROM golang:1.24.2-alpine AS go-builder

WORKDIR /app

# Copy and download dependencies first for better caching
COPY .env.prod go.mod go.sum ./

RUN go mod download

# Copy the rest of the source code
COPY . .

# Build the application (assuming main.go is in the root)
RUN CGO_ENABLED=0 go build -o /app/bin/bootstrap ./main.go

# Stage 3: Final Lambda image
FROM public.ecr.aws/lambda/provided:al2

# Install minimal dependencies
RUN yum install -y \
    perl \
    wget \
    fontconfig \
    freetype \
    libpng \
    libjpeg-turbo \
    libstdc++ \
    && yum clean all

# Copy TeX Live from builder
COPY --from=texlive-builder /usr/local/texlive/ /usr/local/texlive
ENV PATH="/usr/local/texlive/2025/bin/x86_64-linux:/usr/local/bin:$PATH"

RUN pdflatex --version
# COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.9.0 /lambda-adapter /opt/extensions/lambda-adapter
# Copy compiled Go binary and rename to bootstrap
# COPY --from=go-builder /app/bin/bootstrap ${LAMBDA_RUNTIME_DIR}/bootstrap

# Copy any necessary static files (templates, assets, etc.)
COPY --from=go-builder /app/.env.prod /var/task/.env.prod

# Make bootstrap executable
RUN chmod +x ${LAMBDA_RUNTIME_DIR}/bootstrap

# Set the Lambda handler
CMD [ "bootstrap" ]